[{"line":1,"elements":[{"line":2,"name":"","description":"","type":"background","keyword":"Background","steps":[{"result":{"duration":113093123700,"status":"passed"},"line":3,"name":"user navigated to hrms website","match":{"location":"Steps.LoginSteps.user_navigated_to_hrms_website()"},"keyword":"Given "},{"result":{"duration":731446100,"status":"passed"},"line":4,"name":"user enters password and username","match":{"location":"Steps.LoginSteps.user_enters_password_and_username()"},"keyword":"When "},{"result":{"duration":103329248000,"status":"passed"},"line":5,"name":"user click on login button","match":{"location":"Steps.LoginSteps.user_click_on_login_button()"},"keyword":"And "},{"result":{"duration":10990400,"status":"passed"},"line":6,"name":"user logged in as admin","match":{"location":"Steps.LoginSteps.user_logged_in_as_admin()"},"keyword":"Then "},{"result":{"duration":117934000,"status":"passed"},"line":7,"name":"user clicks on PIM button","match":{"location":"Steps.addEmployee.user_clicks_on_pim_button()"},"keyword":"When "},{"result":{"duration":18400406000,"status":"passed"},"line":8,"name":"user clicks on ADD employee button","match":{"location":"Steps.addEmployee.user_clicks_on_add_employee_button()"},"keyword":"And "}]},{"start_timestamp":"2024-01-18T15:16:28.681Z","before":[{"result":{"duration":106570300800,"status":"passed"},"match":{"location":"Steps.Hooks.start()"}}],"line":47,"name":"Frontend and back end testing","description":"","id":"add-an-employe-on-hrms;frontend-and-back-end-testing","after":[{"embeddings":[{"data":"","mime_type":"image/png","name":"Frontend and back end testing"}],"result":{"duration":1582440600,"status":"passed"},"match":{"location":"Steps.Hooks.close(io.cucumber.java.Scenario)"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":848638600,"status":"passed"},"line":48,"name":"user enters direct data \"setevenJ\" and middle \"olgaJ\" and \"kingJ\" last name","match":{"arguments":[{"val":"\"setevenJ\"","offset":24},{"val":"\"olgaJ\"","offset":46},{"val":"\"kingJ\"","offset":58}],"location":"Steps.addEmployee.user_enters_direct_data_and_middle_and_last_name(java.lang.String,java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":240946400,"status":"passed"},"line":49,"name":"capture the employee ID","match":{"location":"Steps.addEmployee.capture_the_employee_id()"},"keyword":"And "},{"result":{"duration":17015457500,"status":"passed"},"line":50,"name":"user clicks on save button","match":{"location":"Steps.addEmployee.user_clicks_on_save_button()"},"keyword":"And "},{"result":{"error_message":"org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //input[@id='btnSave']' (tried for 10 second(s) with 500 MILLISECONDS interval)\r\n\tat org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:82)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)\r\n\tat utils.commonMethods.waitforClickability(commonMethods.java:56)\r\n\tat utils.commonMethods.click(commonMethods.java:60)\r\n\tat Steps.addEmployee.employee_added_successfully(addEmployee.java:66)\r\n\tat ✽.employee added successfully(file:///G:/6%20Cucumber/mavenProject19-12-2023/babarMaven/src/test/resources/features/addEmployee.feature:51)\r\nCaused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='btnSave']\"}\n  (Session info: chrome=120.0.6099.224)\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T18:33:54.468Z'\nSystem info: host: 'BABARALI', ip: '192.168.43.54', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '20.0.2'\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.224, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\\Users\\FMSIFT~1\\AppData\\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:49764}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}\nSession ID: 26fd72f0facda51e7879e3ae3d1e1425\n*** Element info: {Using=xpath, value=//input[@id='btnSave']}\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:361)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat jdk.proxy2/jdk.proxy2.$Proxy21.isDisplayed(Unknown Source)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:301)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:43)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:284)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:672)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:668)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)\r\n\tat utils.commonMethods.waitforClickability(commonMethods.java:56)\r\n\tat utils.commonMethods.click(commonMethods.java:60)\r\n\tat Steps.addEmployee.employee_added_successfully(addEmployee.java:66)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:578)\r\n\tat io.cucumber.java.Invoker.doInvoke(Invoker.java:66)\r\n\tat io.cucumber.java.Invoker.invoke(Invoker.java:24)\r\n\tat io.cucumber.java.AbstractGlueDefinition.invokeMethod(AbstractGlueDefinition.java:47)\r\n\tat io.cucumber.java.JavaStepDefinition.execute(JavaStepDefinition.java:29)\r\n\tat io.cucumber.core.runner.CoreStepDefinition.execute(CoreStepDefinition.java:66)\r\n\tat io.cucumber.core.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:63)\r\n\tat io.cucumber.core.runner.ExecutionMode$1.execute(ExecutionMode.java:10)\r\n\tat io.cucumber.core.runner.TestStep.executeStep(TestStep.java:84)\r\n\tat io.cucumber.core.runner.TestStep.run(TestStep.java:56)\r\n\tat io.cucumber.core.runner.PickleStepTestStep.run(PickleStepTestStep.java:51)\r\n\tat io.cucumber.core.runner.TestCase.run(TestCase.java:84)\r\n\tat io.cucumber.core.runner.Runner.runPickle(Runner.java:75)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.lambda$run$0(PickleRunners.java:151)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:137)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:148)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:144)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:28)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.FeatureRunner.run(FeatureRunner.java:137)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:196)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:89)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runFeatures$6(CucumberExecutionContext.java:148)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.execute(CucumberExecutionContext.java:163)\r\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runFeatures(CucumberExecutionContext.java:146)\r\n\tat io.cucumber.junit.Cucumber$StartAndFinishTestRun.evaluate(Cucumber.java:226)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:69)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)\r\n\tat com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:232)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)\r\n","duration":15988110100,"status":"failed"},"line":51,"name":"employee added successfully","match":{"location":"Steps.addEmployee.employee_added_successfully()"},"keyword":"And "},{"result":{"status":"skipped"},"line":52,"name":"query the information from backEnd","match":{"location":"Steps.queriesDataBase.query_the_information_from_back_end()"},"keyword":"And "},{"result":{"duration":2009300,"status":"skipped"},"line":53,"name":"verify the results from backEnd and frontEnd","match":{"location":"Steps.queriesDataBase.verify_the_results_from_back_end_and_front_end()"},"keyword":"Then "}],"tags":[{"name":"@DataBase"}]}],"name":"add an employe on hrms","description":"","id":"add-an-employe-on-hrms","keyword":"Feature","uri":"file:src/test/resources/features/addEmployee.feature","tags":[]}]